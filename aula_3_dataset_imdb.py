# -*- coding: utf-8 -*-
"""Aula 3 - Dataset IMDB

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BcfFzpHVvYHyT6Jicr6X1Q7fGV9WRYxm

## Aula sobre análise de filmes do banco de dados o IMDB
"""

import pandas as pd
imdb = pd.read_csv("https://gist.githubusercontent.com/guilhermesilveira/24e271e68afe8fd257911217b88b2e07/raw/e70287fb1dcaad4215c3f3c9deda644058a616bc/movie_metadata.csv")
imdb.head()

"""Observando a series color:"""

imdb["color"].unique()  ##Agrupamos os valores encontrados em color

"""Vamos ver quantos filmes de cada tipo temos:"""

imdb["color"].value_counts()  ##Se botassemos .count(), iria contar a quantidade total de filmes encontrados. Assim contamos por valor.

"""Agora já descobrimos quantos filmes coloridos e preto e branco temos, e também sabemos que há mais de 5000 filmes na base. Fizemos algo novo, que foi chamar o value_counts(), passando o parâmetro normalize como True. Desse modo, já calculamos qual é a participação de cada um dos tipos de filmes (95% são filmes coloridos)."""

imdb["color"].value_counts(normalize=True)

"""Agora vamos explorar outra coluna a fim de conhecer os diretores que tem mais filmes na nossa base de dados (lembrando que nossa base é uma amostra muito pequena da realidade)"""

imdb["director_name"].value_counts()

"""Continuando com nossa exploração de algumas informações, vamos olhar para o número de críticas por filmes."""

imdb["num_critic_for_reviews"] ##alguns filmes não tiveram críticas, por isso o NaN

imdb["num_critic_for_reviews"].describe()

"""Veja que as colunas color e director_name são strings, não fazendo sentido olhar para médias, medianas e afins. Olhar para o número de avaliações já pode ser interessante, por isso usamos o .describe().

Agora podemos até plotar um histograma para avaliar o número de review.
"""

import seaborn as sns

sns.set_style("whitegrid")
imdb["num_critic_for_reviews"].plot(kind='hist')

"""Verificamos que poucos filmes tem mais de 500 votos, por isso um paralelo que podemos fazer é que filmes com muitos votos são mais populares e filmes com poucos votos não são tão populares. Logo, pelo histograma fica evidente que poucos filmes fazem muito muito sucesso. Claro que não conseguimos afirmar isso com propriedade, pois, novamente, estamos lidando com um número restrito de dados, mas são pontos interessantes de se pensar.

Outra informação interessante de se analisar, são os **orçamentos** e receitas de um filme, ou seja o aspecto financeiro. Vamos começar pelo gross:
"""

imdb["gross"].hist()  ##faturamento

"""Como você deve ter reparado, essa é a primeira vez que as escalas estão totalmente diferentes, pois no eixo X temos valores tão altos que a escala teve que ser de centena de milhões. Veja como pouquíssimos filmes tem alto faturamento, o que nos acende um primeiro alerta de que tem algo estranho (ou temos filmes que rendem muito dinheiro neste dataset).

Vamos tentar conhecer quais são esses filmes com faturamento astronômico.
"""

imdb.sort_values("gross", ascending=False).head()

"""Nessa lista temos Avatar, Titanic, Jurassic World e The Avengers, o que parece fazer sentido para nós, pois sabemos que esses foram filmes com bilheterias gigantescas. Analisando esses dados conseguimos verificar que os maiores faturamentos fazem sentido, mas encontramos um problema nos dados, dado que encontramos duas linhas diplicadas. Podemos usar o pandas para remover esses dados, mas por enquanto vamos manter todas as informações (Se estiver curioso em saber como se faz, consulte o .drop_duplicates()).

Maravilha, agora temos o faturamento e parece estar OK. Queremos começar a responder algumas perguntas e uma delas é: será que filmes coloridos tem faturamento maior que filmes preto e branco?

Para começar a responder essa pergunta precisamos transformar a coluna Color:
"""

color_or_bw = imdb.query("color in ['Color', ' Black and White']")
color_or_bw["color_0_ou_1"] = (color_or_bw["color"]=="Color")*1
color_or_bw["color_0_ou_1"].value_counts()

color_or_bw.head()

"""Veja que agora nós temos uma última coluna em nosso dataframe com valores 0 e 1. Agora podemos construir gráficos com essa informação de filmes coloridos ou não.

P.S: Em aula tivemos problemas porque Black and White tinha um espaço no início, vou cortar esses detalhes aqui no notebook, mas reforço a importância de acompanhar este processo no vídeo
"""

sns.scatterplot(data=color_or_bw, x="color_0_ou_1", y="gross")

"""Então plotamos nossos dados com um displot! Existem várias formas de visualizar essa informação, mas por ora essa nos ajuda a comparar os resultados. Repare como filmes coloridos tem valores bem maiores (isso já era até esperado), mas também temos pontos bem altos em filmes preto e branco, chamando muito atenção.

Vamos explorar algumas estatísticas destes filmes:
"""

color_or_bw.groupby("color").mean()["gross"] ##media do faturamento dos filmes coloridos e dos preto e branco

color_or_bw.groupby("color").mean()["imdb_score"]  ##a média da nota total

color_or_bw.groupby("color").median()["imdb_score"]

"""Das estatísticas temos duas bem interessantes, a média e mediana das notas de filmes preto e branco são maiores. Há várias possíveis explicações sobre o porquê disso, reflita aí sobre algumas delas e compartilhe conosco!

A partir de agora, vamos fazer uma investigação melhor em relação às finanças dos filmes (faturamento e orçamento). Vamos iniciar plotando e interpretando um gráfico de gross por budget:
"""

budget_gross = imdb[["budget", "gross"]].dropna().query("budget > 0 | gross > 0")

sns.scatterplot(data=budget_gross, x="budget", y="gross")

"""Para plotar os dados, primeiro removemos as linhas com informações de faturamento e orçamento vazias e também com valores igual a 0, para então gerar o gráfico.

Agora vamos analisar esse gráfico juntos, veja que a escala de budget mudou, agora é e10. Repare que apenas poucos filmes tem orçamentos tão grandes assim, e seus faturamentos são muito baixos. Será que temos algum problema nos dados? Vamos investigar melhor!
"""

imdb.sort_values("budget", ascending=False).head()

"""Ordenando os dados pelo budget percebemos que as primeiras posições são de filmes asiáticos. O Guilherme trouxe um ponto interessante para a investigação, pois países como a Coreia usam moedas que tem três casas decimais a mais que o dólar. Então provavelmente o que está ocorrendo é que os dados de orçamento tem valores na moeda local, por isso detectamos valores tão discrepantes.

Como não temos garantia dos números, vamos precisar trabalhar apenas com filmes americanos, assim garantimos que tanto gross e budget estão em dólares. Então vamos iniciar esse processo:
"""

imdb["country"].value_counts()

imdb["country"].unique()

"""Veja que temos filmes de diversos locais de origem. Vamos tirar só os filmes USA para análise e eliminar os duplicas."""

imdb = imdb.drop_duplicates()
imdb_usa = imdb.query("country=='USA'")
imdb_usa.sort_values("budget", ascending=False).head()

"""Agora temos os dados para fazer uma análise melhor entre gross e budget. Vamos plotar o gráfico novamente:"""

budget_gross = imdb_usa[["budget","gross"]].dropna().query("budget > 0 | gross > 0")

sns.scatterplot(data=imdb_usa, x="budget", y="gross")

"""Veja que interessante, aparentemente temos uma relação entre orçamento e faturamento. Quanto maior o orçamento, maior o faturamento.

Já que estamos trabalhando com orçamento e faturamento, podemos construir uma nova informação, o lucro, para analisar. De forma bem simplista esse processo de construir novas informações a partir das existentes no dataset é conhecido como [feature engineering](https://en.wikipedia.org/wiki/Feature_engineering).
"""

imdb_usa["lucro"] = imdb_usa["gross"] - imdb_usa["budget"]

budget_gross = imdb_usa.query("budget >0 | gross > 0")[["budget", "lucro"]].dropna() #quero valores maiores que 0

sns.scatterplot(x="budget", y="lucro", data = budget_gross)

"""MUito bom! Nós construímos nossa coluna lucro na base de dados e plotamos o orçamento contra lucro.

Repare que temos pontos interessantes nesta visualização, um deles são esses filmes com muito custo e prejuizo. Isso pode ser um prejuizo real, mas também podem ser filmes que ainda não tiveram tempo de recuperar o investimento (lançamentos recentes). Outros pontos interessantes de se analisar seriam os filmes com baixos orçamentos e muito lucro, será que são estão corretos ou pode ser algum erro da base? Parece que nem sempre gastar uma tonelada de dinheiro vai gerar lucros absurdos, será que é isso é verdade?

Esse gráfico é muito rico em informações, vale a pena você gastar um tempo criando hipóteses.

Já que essa nova feature (lucro) parace ser interessante de se analisar, vamos continuar! Mas agora quero ver o lucro em relação ao ano de produção:
"""

budget_gross = imdb_usa.query("budget >0 | gross > 0")[["title_year", "lucro"]].dropna()

sns.scatterplot(x="title_year", y="lucro", data = budget_gross)

"""Olha que legal esse gráfico, veja como alguns pontos mais recentes reforça a teoria de que alguns filmes podem ainda não ter recuperado o dinheiro investido (Claro que temos muitas variáveis para se analisar, mas é um indício relevante).

Outro ponto que chama muito atenção, são os filmes da década de 30 e 40 com lucros tão altos. Quais serão esses filmes? Bom, essa pergunta você vai responder no desafio do Paulo, que está louco para descobrir!

Falando em Paulo, ele sugeriu uma análise com os nome dos diretores e o orçamento de seus filmes, vamos ver se conseguimos concluir alguma coisa:
"""

filmes_por_diretor = imdb_usa["director_name"].value_counts() ##contando quantos filmes cada diretor fez
gross_director = imdb_usa[["director_name", "gross"]].set_index("director_name").join(filmes_por_diretor, on="director_name") 
##o primeiro comando da variável vai botar na variável as series selecionadas (director_name e gross), depois vai setar para o índice ser o directo_name. Por ultimo adiciona a quantidade de filmes por diretor de acordo com o director_name
gross_director.columns=["dindin", "filmes_irmaos"] ##mudando os nomes das colunas, mas não muda o nome do índice
gross_director = gross_director.reset_index() ##o director_name deixa de ser índice e volta a ser coluna, cria-se um índice do lado
gross_director.head()

sns.scatterplot(x="filmes_irmaos", y="dindin", data = gross_director)

"""Essa imagem aparentemente não é muito conclusiva, então não conseguimos inferir tantas informações.

Esse processo de gerar dados, visualizações e acabar não sendo conclusivo é muito comum na vida de um cientista de dados, pode ir se acostumando =P.

Para finalizar, que tal realizar uma análise das correlações dos dados? EXistem várias formas de calcular a correlação, esse é um assunto denso.Você pode ler mais sobre essas métricas neste [link](https://pt.wikipedia.org/wiki/Correla%C3%A7%C3%A3o).

Vamos então inciar a análise das correlações plotando o pairplot.
"""

sns.pairplot(data = imdb_usa[["gross", "budget", "lucro", "title_year"]])

"""O pairplot mostra muita informação e a melhor forma de você entender é assistindo as conclusões que tiramos sobre esses gráficos na vídeoaula.

Embora plotamos um monte de informação, não necessariamente reduzimos a correlação em um número para simplificar a análise. Vamos fazer isso com a ajuda do `.corr()` do [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.corr.html).
"""

imdb_usa[["gross", "budget", "lucro", "title_year"]].corr()

"""Com o pandas é simples de se calcular a correlação, mas precisamos saber interpretar os resultados. Vamos fazer isso?

A correlação é uma métrica que vai de 1 a -1. Quando a correlação é 1, dizemos que é totalmente correlacionada (relação linear perfeita e positiva), ou seja se uma variável aumenta em 10 a outra também irá aumentar em 10. Quando o valor da correlação é -1, também temos variáveis totalmente correlacionda, só que de maneira negativa (relação linear perfeita negativa), neste caso, se uma variável aumenta em 10 a outra reduz em 10. Agora quando a correlação é 0 temos a inexistência de correlação, ou seja, uma variável não tem influêcia sobre a outra.

Agora sim, entendido sobre a correlação vamos analisar as nossas. Veja que lucro e gross tem uma correlação alta, o que indica que quanto maior o orçamento maior o lucro (mas repare que a correlação não é perfeita), já o title_yers e lucro tem correlação negativa, mas muito perto de zero (ou seja quase não tem correlação). Viu como conseguimos analisar muitas coisas com a correlação?! Pense e tente analisar os outros casos também.

## Desafio 1 do [Thiago Gonçalves](https://twitter.com/tgcsantos)

Plotar e analisar o Boxplot da média (coluna imbd_score) dos filmes em preto e branco e coloridos.
"""

import matplotlib.pyplot as plt


plt.figure(figsize=(10,10))
grafico1 = sns.boxplot(data=color_or_bw, x="color_0_ou_1", y="imdb_score")
plt.show()

"""Análise: 
Os filmes preto e branco possuem uma maior nota, provavelmente por serem filmes considerados clássicos, além de terem sido registrados no banco de dados em menor quantidade. Existe uma menor dispersão, em relação aos de cor, e isso pode ser possível devido a quantidade de avaliações. Já que existem muito menos filmes em preto e branco do que coloridos.
Além disso, os votos nos filmes de cor se concentram, provavelmente nos mais populares, o que gera uma variação grande na dispersão e na quantidade maior de outliers.
O gráfico de cor parece ser levemente mais simétrico do que o PB, já que a mediana se concentra mais na região central dos quartis.
"""

color_0 = color_or_bw.query("color_0_ou_1==0")
color_0["imdb_score"].describe()

color_1 = color_or_bw.query("color_0_ou_1==1")
color_1["imdb_score"].describe()

"""##Desafio 2 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

No gráfico de **budget por lucro** temos um ponto com muito custo e prejuizo, descubra com é esse filme (budget próximo de 2.5).
"""

##Plotando novamente o gráfico:

imdb_usa["lucro"] = imdb_usa["gross"] - imdb_usa["budget"]

budget_gross = imdb_usa.query("budget >0 | gross > 0")[["budget", "lucro"]].dropna() #quero valores maiores que 0

sns.scatterplot(x="budget", y="lucro", data = budget_gross)

#menor_lucro = imdb_usa.groupby("movie_title")["lucro"]
#filmes_com_lucro = imdb_usa.join("movie_title", on="movie_title")
qntd_lucro = imdb_usa[["movie_title", "lucro"]].set_index("movie_title")
qntd_lucro = qntd_lucro.reset_index()
qntd_lucro.sort_values("lucro", ascending=True).head()

"""O filme com o menor lucro é John Carter."""

imdb_usa.sort_values("lucro").head(1)

"""##Desafio 3 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)


Em aula falamos que talvez, filmes mais recentes podem ter prejuizo pois ainda não tiveram tempo de recuperar o investimento. Analise essas informações e nos conte quais foram suas conclusões.
"""

##Segue o gráfico:

budget_gross = imdb_usa.query("budget >0 | gross > 0")[["title_year", "lucro"]].dropna()

sns.scatterplot(x="title_year", y="lucro", data = budget_gross)

reviews_por_ano = imdb_usa[["num_user_for_reviews", "title_year"]].set_index("num_user_for_reviews") #quero analisar a qntd de reviews de acordo com o ano
reviews_por_ano = reviews_por_ano.reset_index()
reviews_por_ano.sort_values("title_year", ascending=False) #fiz isso para ver a data mais recente de registro

#imdb_usa["title_year"].value_counts()

##vou criar uma tabela para os filmes de 2011 até 2016 e depois de 2006 a 2011 para analisar se tem diferença nas reviews

reviews_mais_recentes = reviews_por_ano[["num_user_for_reviews", "title_year"]].dropna().query("title_year > 2011") #deixei apenas os filmes mais recentes
reviews_mais_recentes["title_year"].unique() #conferi aqui

reviews_mais_antigos = reviews_por_ano[["num_user_for_reviews", "title_year"]].dropna().query("title_year < 2011 & title_year >= 2006") #agoria criei a dos mais antigos
reviews_mais_antigos["title_year"].unique()

plt.figure(figsize=(6,10))
plt.title("Quantidade de reviews nos anos de 2006 a 2010")
grafico_antigo = sns.boxplot(data=reviews_mais_antigos,y="num_user_for_reviews")
plt.show()

plt.figure(figsize=(6,10))
plt.title("Quantidade de reviews nos anos de 2011 a 2016")
grafico_recente = sns.boxplot(data=reviews_mais_recentes,y="num_user_for_reviews")
plt.show()

"""Não dá pra usar essa análise separada, mas junto com outros fatores, podemos demonstrar que houve pouco registro dos filmes mais recentes, em relação ao mais antigos. Isso pode ocorrer pelo fato de que menos pessoas viram os filmes mais recentes em relação ao antigos. Cosnequentemente, temos um número menor de bilheteria, ocasionando nesses dados atuais de "prejuízo". O filme ainda não teve tempo de bater a verba orçamentária e obter o lucro planejado.

## Desafio 4 do [Paulo Silveira](https://twitter.com/paulo_caelum)

Quais foram os filmes da decada pré 2° guerra que tiveram muito lucro.
"""

##Criando a tabela de filmes por ano
filmes_por_ano = imdb_usa[["movie_title", "title_year", "lucro"]].set_index("movie_title")
filmes_por_ano = filmes_por_ano.reset_index()
filmes_por_ano.head()

filmes_pre_guerra = filmes_por_ano[["movie_title", "title_year", "lucro"]].dropna().query("title_year < 1945")
filmes_pre_guerra.sort_values("lucro", ascending=False)

"""## Desafio 5 do [Paulo Silveira](https://twitter.com/paulo_caelum)

No gráfico de **filmes_irmaos por dindin** temos alguns pontos estranhos entre 15 e 20. Confirme a tese genial do Paulo que o cidadão estranho é o Woody Allen. (Se ele tiver errado pode cornete nas redes sociais kkkkk)
"""

sns.scatterplot(x="filmes_irmaos", y="dindin", data = gross_director)

woody_allen = gross_director[["director_name", "dindin", "filmes_irmaos"]].dropna().query("filmes_irmaos > 15 & filmes_irmaos < 20")
woody_allen["director_name"].unique()

"""## Desafio 6 do [Thiago Gonçalves](https://twitter.com/tgcsantos)

Analise mais detalhadamente o gráfico pairplot, gaste um tempo pensando e tentando enteder os gráficos.
"""

sns.pairplot(data = imdb_usa[["gross", "budget", "lucro", "title_year"]])

"""GROSS X TITLE_YEAR

Percebe-se que há uma concentração de filmes atuais com alto faturamento. Principalmente a partir da década de 80, os faturamentos deram um aumento e isso pode ser explicado pelo investimento em novas tecnologias de produção e filmagem. O nicho cinematográfico cresceu com o aumento de variedade de gêneros e de superproduções. O que é possível também comparar com o lucro e orçamento. Os filmes mais lucrativos são os mais atuais, apesar de muitos deles estarem inclusos naquela análise de que talvez não tenho tido tempo de bilheteria suficiente para implacar tal lucro.

LUCRO X BUDGET

É interessante verificar alguns filmes que contam com baixo orçamento e lucros tão altos quando algumas superproduções. Provavelmente trata-se de alguns filmes clássicos, como filmes de drama
"""

filmes_baixo_orçamento = imdb_usa[["movie_title", "budget", "lucro"]].dropna().query("lucro > 400000000.0")
filmes_baixo_orçamento.sort_values("lucro", ascending=False).drop_duplicates().head(20)

"""Nessa tabela a gente observa filmes com menos orçamento que lucraram mais do que filmes com orçamentos superiores. No gráfico é possível observar esses 6 filmes no eixo Y acima do ponto 4.

## Desafio 7 do [Thiago Gonçalves](https://twitter.com/tgcsantos)


Calcular a correlação apenas dos filmes pós anos 2000 (Jogar fora filmes antes de 2000) e interpretar essa correlação.
"""

filmes_2000 = imdb_usa[["movie_title", "budget", "lucro", "gross", "title_year"]].query("title_year >= 2000").dropna().drop_duplicates()
filmes_2000.head()
filmes_2000.corr()

"""Nota-se que o orçamento e o faturamento possuem uma alta correlação positiva, o que possivelmente significa que quanto maior o orçamento, maior o faturamento. O que não significa que quanto maior o orçamento, maior o lucro, já que temos uma correlação próxima de 0. Essa variação pode dependenr da bilheteria, filmes mais recentes talvez não tiveram tempo necessário para bater a meta.
O ano também não tem uma relação direta expressiva com nenhum dos outros fatores.
É importante ressaltar que não há correlações negativas, então não há nenhum valor inversamente proporcional. Significa, que o crescimento de um implaca no crescimento de outro. Se tem mais faturamento, tem mais lucro, por exemplo.
O orçamento e o lucro não possuem uma correlação expressiva também, não significa que se injetou mais dinheiro, o filme vai lucrar mais. Existem outras variáveis para esse tipo de análise.

## Desafio 8 do [Allan Spadini](https://twitter.com/allanspadini)

Tentar encontrar uma reta, pode ser com uma régua no monitor (não faça isso), com o excel/google sheets, com o python, no gráfico que parece se aproximar com uma reta (por exemplo budget/lucro, gross/lucro)
"""

#lucro_gross_2000 = filmes_2000[["lucro","gross"]].dropna().query("budget > 0 | gross > 0")

sns.scatterplot(data=filmes_2000, x="gross", y="lucro") #Vou analisar o lucro e o faturamento dos filmes dos anos 2000 até hoje
sns.lineplot

sns.pairplot(data = filmes_2000[["gross", "lucro"]], kind="reg", plot_kws={'line_kws':{'color':'red'}})

"""## Desafio 9 da [Thais André](https://twitter.com/thais_tandre)

Analisar e interpretar a correlação de outras variáveis além das feitas em sala (notas é uma boa). Número de avaliações por ano pode ser também uma feature.

Fiz esse desafio junto com o 3
"""